"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

import random


#############################################################################################
def find_min_1(lst_obj):
####Сложность: O(n)
    min_numb = min(lst_obj)     # O(n)
    return min_numb             # O(1)


def find_min_2(lst_obj):
####Сложность: O(n)
    min_numb = lst_obj[0]       # O(1)
    for i in lst_obj:           # O(n)
        if min_numb >= i:       # O(1)
            min_numb = i        # O(1)
    return min_numb             # O(1)


#############################################################################################
def find_min_3(lst_obj):
####Сложность: O(n^2)
    min_numb_i = lst_obj[0]                     # O(1)
    min_numb_j = lst_obj[0]                     # O(1)
    for i in range(len(lst_obj)):               # O(n)
        for j in range(len(lst_obj)):           # O(n)
            if lst_obj[i] > lst_obj[j]:         # O(1)
                min_numb_j = lst_obj[j]         # O(1)
        if min_numb_i > min_numb_j:             # O(1)
            min_numb_i = min_numb_j             # O(1)
    return min_numb_i                           # O(1)


#############################################################################################

for j in (10, 20, 30, 40):
    lst_number = random.sample(range(1, 200), j)

print(find_min_1(lst_number))
print(find_min_2(lst_number))
print(find_min_3(lst_number))
